name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install
      working-directory: ./frontend

    - name: Build frontend
      run: npm run build
      working-directory: ./frontend

    - name: Test frontend
      run: npm test
      working-directory: ./frontend

    - name: Install backend dependencies
      run: npm install
      working-directory: ./backend

    - name: Test backend
      run: npm test
      working-directory: ./backend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Build and deploy
      run: |
        npm install
        npm run build
        npm run deploy
      working-directory: ./backend

    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v3
      with:
        name: deployment-artifacts
        path: ./backend/deployment

    - name: Notify deployment
      uses: actions/github-script@v6
      with:
        script: |
          const { context } = require('@actions/github');
          const { octokit } = require('@actions/github');
          await octokit.issues.createComment({
            ...context.repo,
            issue_number: context.issue.number,
            body: 'Deployment successful!'
          });

